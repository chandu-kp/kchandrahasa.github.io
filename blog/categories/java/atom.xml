<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: java | Chandrahasa]]></title>
  <link href="http://blog.kchandrahasa.com/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://blog.kchandrahasa.com/"/>
  <updated>2013-08-09T21:03:13-04:00</updated>
  <id>http://blog.kchandrahasa.com/</id>
  <author>
    <name><![CDATA[Chandra]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install Oracle Java jdk 7 on Ubuntu]]></title>
    <link href="http://blog.kchandrahasa.com/blog/2013/07/31/install-oracle-java-jdk-7-on-ubuntu/"/>
    <updated>2013-07-31T22:18:00-04:00</updated>
    <id>http://blog.kchandrahasa.com/blog/2013/07/31/install-oracle-java-jdk-7-on-ubuntu</id>
    <content type="html"><![CDATA[<p>Installing Oracle JDK in Ubuntu (12.04+)</p>

<p>Ubuntu stopped hosting Oracle PPAs (Personal Package Archive) because of license issues, so now Oracle Java can&rsquo;t be installed from Ubuntu repositories. But, thanks to WebUpd8 team as they provide ubuntu PPAs from their repositories.</p>

<!--more-->


<ul>
<li><p>Install Oracle JDK 7 by executing the following commands</p>

<p>  <code>$ sudo add-apt-repository ppa:webupd8team/java</code></p>

<blockquote><p>In case you get error message <strong>add-apt-repository: command not found</strong>, then install <strong>python-software-properties package</strong> as follows and <strong>re-execute</strong> the above command.
  <code>$ sudo apt-get install python-software-properties</code></p></blockquote>

<p>  <code>$ sudo apt-get update</code>  <br/>
  <code>$ sudo apt-get install oracle-java7-installer</code></p>

<blockquote><p>Note that, they do have Oracle Java 8 (<code>oracle-java8-installer</code>) and Oracle Java 6 (<code>oracle-java6-installer</code>)</p></blockquote></li>
<li><p>Set the Oracle JDK as default (if already not set) by using the following command.
  <code>$ sudo update-java-alternatives -s java-7-oracle</code></p></li>
<li><p>Check the version<br/>
  <code>$ java -version</code></p>

<p>  You should see the following</p>

<blockquote><p>java version &ldquo;1.7.0_25&rdquo;  <br/>
Java&trade; SE Runtime Environment (build 1.7.0_25-b15) <br/>
Java HotSpot&trade; 64-Bit Server VM (build 23.25-b01, mixed mode)</p></blockquote></li>
<li><p>If you want to remove OpenJDK, then execute the following command on the terminal.
<code>$ sudo apt-get purge openjdk*</code></p></li>
</ul>


<blockquote><p>Reference: <a href="http://www.webupd8.org/2012/01/install-oracle-java-jdk-7-in-ubuntu-via.html">Install Oracle Java in Ubuntu</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configuring Tomcat Catalina Log Rotation]]></title>
    <link href="http://blog.kchandrahasa.com/blog/2013/07/16/configuring-tomcat-catalina-log-rotation/"/>
    <updated>2013-07-16T01:23:00-04:00</updated>
    <id>http://blog.kchandrahasa.com/blog/2013/07/16/configuring-tomcat-catalina-log-rotation</id>
    <content type="html"><![CDATA[<p>Tomcat uses Juli logging package for all system level logging by default. Tomcat 6.0 onwards Juli is basically a wrapper over java.util.logging.</p>

<p>Here are the important log files generated by Tomcat</p>

<ul>
<li>catalina.out : all sysout and syserr goes into this log along with the bootstrap logs from when you start/stop Tomcat</li>
<li>catalina.YYYY-MM-DD.log : This, as you can see, a daily rotating file with all sysout, syserr logs.</li>
</ul>


<!--more-->


<h2>Problem with catalina.out</h2>

<p><em>catalina.out</em> by default does not rotate. It can grow till you run out of space. This can potentially be issue if your webapp is logging to sysout, which ideally should not be the case and instead use its own logger preferably using log4j or using java.util.logging itself.</p>

<p>But in some cases, you may be deploying someone else&rsquo;s the web application. So, you may need to either keep truncating catalina.out or turn off logging. Please note that truncating/deleting the catalina.out needs Tomcat restart to take effect.</p>

<h4>The simplest way of turning off catalina.out is as follows:</h4>

<ul>
<li>go to <em>logging.properties</em> and modify as follows (either way)</li>
</ul>


<p>Turn off log level for <em>java.util.logging.ConsoleHandler</em></p>

<p><div><script src='https://gist.github.com/6005716.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>OR</p>

<p>remove <em>java.util.logging.ConsoleHandler</em> altogether</p>

<p><div><script src='https://gist.github.com/6005738.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<blockquote><p>logging.properties is located in &lt;CATALINA_HOME>/conf or /etc/tomcat6</p></blockquote>

<h2>Problem with daily log files</h2>

<p>The daily log files, catalina.YYYY-MM-DD.log, rotate once a day by default. This again may cause issue depending on the web app, if the web app is receiving millions of request daily or its logging lots of logs. So, you may need to rotate this log as well to keep the size limit in check. Juli by do not have rotating capability other than daily rotation. Instead change the logging package from Juli to java.uitl.logging as follows in order to rotate the log.</p>

<blockquote><p>In case you need to turn off this log as well, you can do so similar to catalina.out as mentioned above.</p></blockquote>

<p>  <div><script src='https://gist.github.com/6005771.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<h2>Why application log goes to catalina logs?</h2>

<p>Even though you use logging framework, the log may still be going to catalina logs along with your own log files. This is mostly due to the way logger has been set up in that the log is added to console handler as well in addition to file handler. Anything that is added to console handler is redirected to catalina logs unless they are turned off as mentioned above.</p>

<p>If you are using java.util.logging in your web application, then you can turn off logging to console handler using <code>logger.setUseParentHandlers(false);</code></p>

<blockquote><p>For more details refer: <a href="http://stackoverflow.com/a/2533250/674446">http://stackoverflow.com/a/2533250/674446</a></p></blockquote>

<p>If you are using log4j, make sure you do not have, <code>org.apache.log4j.ConsoleAppender</code> in log4j.properties, instead use only <code>org.apache.log4j.RollingFileAppender</code>.</p>
]]></content>
  </entry>
  
</feed>
